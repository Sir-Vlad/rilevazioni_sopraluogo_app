name: Build Tauri App (Windows)

on:
  push:
    branches: [ release ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install Rust (Stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      - name: Cache vcpkg
        uses: actions/cache@v4
        id: cache-vcpkg
        with:
          key: ${{ runner.os }}-vcpkg-libpq-${{ hashFiles('**/vcpkg.json') }}
          path: |
            C:\vcpkg\installed
            C:\vcpkg\packages
          restore-keys: |
            ${{ runner.os }}-vcpkg-libpq-
            ${{ runner.os }}-vcpkg-

      - name: Install libpq via vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: |
          vcpkg install libpq:x64-windows
        shell: powershell

      - name: Set vcpkg environment variables
        run: |
          echo "PQ_LIB_DIR=C:\vcpkg\installed\x64-windows\lib" >> $env:GITHUB_ENV
        shell: powershell

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --bundles msi,nsis

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: windows-installers
          path: |
            target/release/bundle/msi/*.msi
            target/release/bundle/nsis/*.exe
          if-no-files-found: warn

